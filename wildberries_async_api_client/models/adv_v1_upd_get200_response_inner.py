# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class AdvV1UpdGet200ResponseInner(BaseModel):
    """
    AdvV1UpdGet200ResponseInner
    """ # noqa: E501
    upd_num: Optional[StrictInt] = Field(default=None, description="Номер выставленного документа (при наличии)", alias="updNum")
    upd_time: Optional[StrictStr] = Field(default=None, description="Время списания", alias="updTime")
    upd_sum: Optional[StrictInt] = Field(default=None, description="Выставленная сумма", alias="updSum")
    advert_id: Optional[StrictInt] = Field(default=None, description="Идентификатор кампании", alias="advertId")
    camp_name: Optional[StrictStr] = Field(default=None, description="Название кампании", alias="campName")
    advert_type: Optional[StrictInt] = Field(default=None, description="Тип кампании", alias="advertType")
    payment_type: Optional[StrictStr] = Field(default=None, description="<dl> <dt>Источник списания:</dt> <dd>Баланс</dd> <dd>Бонусы</dd> <dd>Счет</dd> </dl> ", alias="paymentType")
    advert_status: Optional[StrictInt] = Field(default=None, description="<dl>   <dt>Статус кампании:</dt>   <dd><code>4</code> - готова к запуску </dd>   <dd><code>7</code> - завершена</dd>   <dd><code>8</code> - отказался</dd>   <dd><code>9</code> - активна</dd>   <dd><code>11</code> - приостановлена</dd> </dl> ", alias="advertStatus")
    __properties: ClassVar[List[str]] = ["updNum", "updTime", "updSum", "advertId", "campName", "advertType", "paymentType", "advertStatus"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of AdvV1UpdGet200ResponseInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of AdvV1UpdGet200ResponseInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "updNum": obj.get("updNum"),
            "updTime": obj.get("updTime"),
            "updSum": obj.get("updSum"),
            "advertId": obj.get("advertId"),
            "campName": obj.get("campName"),
            "advertType": obj.get("advertType"),
            "paymentType": obj.get("paymentType"),
            "advertStatus": obj.get("advertStatus")
        })
        return _obj


