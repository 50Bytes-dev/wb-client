# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.models_warehouses_box_rates import ModelsWarehousesBoxRates

class TestModelsWarehousesBoxRates(unittest.TestCase):
    """ModelsWarehousesBoxRates unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsWarehousesBoxRates:
        """Test ModelsWarehousesBoxRates
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsWarehousesBoxRates`
        """
        model = ModelsWarehousesBoxRates()
        if include_optional:
            return ModelsWarehousesBoxRates(
                dt_from_min = '{}',
                dt_next_box = '{}',
                dt_till_max = '{}',
                warehouse_list = [
                    wildberries_async_api_client.models.models/warehouse_box_rates.models.WarehouseBoxRates(
                        box_delivery_and_storage_expr = '20', 
                        box_delivery_base = '150', 
                        box_delivery_liter = '10', 
                        box_storage_base = '100', 
                        box_storage_liter = '10', 
                        warehouse_name = 'Коледино', )
                    ]
            )
        else:
            return ModelsWarehousesBoxRates(
        )
        """

    def testModelsWarehousesBoxRates(self):
        """Test ModelsWarehousesBoxRates"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
