# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.models_excise_report_response import ModelsExciseReportResponse

class TestModelsExciseReportResponse(unittest.TestCase):
    """ModelsExciseReportResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsExciseReportResponse:
        """Test ModelsExciseReportResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsExciseReportResponse`
        """
        model = ModelsExciseReportResponse()
        if include_optional:
            return ModelsExciseReportResponse(
                data = [
                    wildberries_async_api_client.models.models_excise_report_response_data_inner.models_ExciseReportResponseData_inner(
                        name = 'Россия', 
                        price = 100, 
                        currency_name_short = 'руб', 
                        excise_short = '0102900254680370215_Re/=lSbNiGD', 
                        barcode = '2038893425820', 
                        nm_id = 169085355, 
                        operation_type_id = 1, 
                        fiscal_doc_number = 12345678, 
                        fiscal_dt = '{}', 
                        fiscal_drive_number = '', 
                        rid = 606217433440, 
                        srid = '7513432034713632943.1.0', )
                    ]
            )
        else:
            return ModelsExciseReportResponse(
        )
        """

    def testModelsExciseReportResponse(self):
        """Test ModelsExciseReportResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
