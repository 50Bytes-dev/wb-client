# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.models_options_result_model_result_inner import ModelsOptionsResultModelResultInner

class TestModelsOptionsResultModelResultInner(unittest.TestCase):
    """ModelsOptionsResultModelResultInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsOptionsResultModelResultInner:
        """Test ModelsOptionsResultModelResultInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsOptionsResultModelResultInner`
        """
        model = ModelsOptionsResultModelResultInner()
        if include_optional:
            return ModelsOptionsResultModelResultInner(
                barcode = '',
                error = wildberries_async_api_client.models.models_options_result_model_result_inner_error.models_OptionsResultModel_result_inner_error(
                    title = '', 
                    detail = '', ),
                is_error = True,
                warehouses = [
                    wildberries_async_api_client.models.models_options_result_model_result_inner_warehouses_inner.models_OptionsResultModel_result_inner_warehouses_inner(
                        warehouse_id = 56, 
                        can_box = True, 
                        can_monopallet = True, 
                        can_supersafe = True, )
                    ]
            )
        else:
            return ModelsOptionsResultModelResultInner(
        )
        """

    def testModelsOptionsResultModelResultInner(self):
        """Test ModelsOptionsResultModelResultInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
