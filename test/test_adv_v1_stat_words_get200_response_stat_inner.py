# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.adv_v1_stat_words_get200_response_stat_inner import AdvV1StatWordsGet200ResponseStatInner

class TestAdvV1StatWordsGet200ResponseStatInner(unittest.TestCase):
    """AdvV1StatWordsGet200ResponseStatInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvV1StatWordsGet200ResponseStatInner:
        """Test AdvV1StatWordsGet200ResponseStatInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvV1StatWordsGet200ResponseStatInner`
        """
        model = AdvV1StatWordsGet200ResponseStatInner()
        if include_optional:
            return AdvV1StatWordsGet200ResponseStatInner(
                advert_id = 56,
                keyword = '',
                advert_name = '',
                campaign_name = '',
                begin = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                views = 56,
                clicks = 56,
                frq = 56,
                ctr = 1.337,
                cpc = 1.337,
                duration = 56,
                sum = 1.337
            )
        else:
            return AdvV1StatWordsGet200ResponseStatInner(
        )
        """

    def testAdvV1StatWordsGet200ResponseStatInner(self):
        """Test AdvV1StatWordsGet200ResponseStatInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
