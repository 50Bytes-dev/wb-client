# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.adv_v1_advert_get200_response import AdvV1AdvertGet200Response

class TestAdvV1AdvertGet200Response(unittest.TestCase):
    """AdvV1AdvertGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvV1AdvertGet200Response:
        """Test AdvV1AdvertGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvV1AdvertGet200Response`
        """
        model = AdvV1AdvertGet200Response()
        if include_optional:
            return AdvV1AdvertGet200Response(
                advert_id = 56,
                name = '',
                brand = '',
                type = 56,
                status = 56,
                create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                extended = wildberries_async_api_client.models._adv_v1_advert_get_200_response_extended._adv_v1_advert_get_200_response_extended(
                    reason = '', 
                    expenses = 56, 
                    from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    price = 56, 
                    budget = 56, 
                    operation = 56, 
                    contract_id = 56, ),
                items = [
                    wildberries_async_api_client.models._adv_v1_advert_get_200_response_items_inner._adv_v1_advert_get_200_response_items_inner(
                        id = 56, 
                        name = '', 
                        status = 56, 
                        place = 56, 
                        budget = 56, 
                        daily_limit = 56, 
                        category_name = '', 
                        cpm = 56, 
                        url = '', 
                        advert_type = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        date_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        date_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        nms = [
                            56
                            ], 
                        bottom_text1 = '', 
                        bottom_text2 = '', 
                        message = '', 
                        additional_settings = 56, 
                        receivers_count = 56, 
                        subject_id = 56, 
                        subject_name = '', 
                        action_name = '', 
                        show_hours = [
                            wildberries_async_api_client.models._adv_v1_advert_get_200_response_items_inner_show_hours_inner._adv_v1_advert_get_200_response_items_inner_show_hours_inner(
                                from = 56, 
                                to = 56, )
                            ], 
                        erid = '', )
                    ]
            )
        else:
            return AdvV1AdvertGet200Response(
        )
        """

    def testAdvV1AdvertGet200Response(self):
        """Test AdvV1AdvertGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
