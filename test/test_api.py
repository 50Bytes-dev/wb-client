# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.api.api import Api


class TestApi(unittest.TestCase):
    """Api unit test stubs"""

    def setUp(self) -> None:
        self.api = Api()

    def tearDown(self) -> None:
        pass

    def test_adv_v0_pause_get(self) -> None:
        """Test case for adv_v0_pause_get

        Пауза кампании
        """
        pass

    def test_adv_v0_start_get(self) -> None:
        """Test case for adv_v0_start_get

        Запуск кампании
        """
        pass

    def test_adv_v0_stop_get(self) -> None:
        """Test case for adv_v0_stop_get

        Завершение кампании
        """
        pass

    def test_adv_v1_advert_pause_post(self) -> None:
        """Test case for adv_v1_advert_pause_post

        Приостановка медиакампании
        """
        pass

    def test_adv_v1_advert_start_post(self) -> None:
        """Test case for adv_v1_advert_start_post

        Запуск медиакампании
        """
        pass

    def test_adv_v1_advert_stop_post(self) -> None:
        """Test case for adv_v1_advert_stop_post

        Завершение медиакампании
        """
        pass

    def test_adv_v1_item_cpm_change_post(self) -> None:
        """Test case for adv_v1_item_cpm_change_post

        Изменение ставки баннера
        """
        pass

    def test_adv_v1_stats_post(self) -> None:
        """Test case for adv_v1_stats_post

        Статистика медиакампаний
        """
        pass

    def test_api_v1_analytics_acceptance_report_get(self) -> None:
        """Test case for api_v1_analytics_acceptance_report_get

        Получить отчёт
        """
        pass

    def test_api_v1_paid_storage_get(self) -> None:
        """Test case for api_v1_paid_storage_get

        Создать отчёт
        """
        pass

    def test_api_v1_paid_storage_tasks_task_id_download_get(self) -> None:
        """Test case for api_v1_paid_storage_tasks_task_id_download_get

        Получить отчёт
        """
        pass

    def test_api_v1_paid_storage_tasks_task_id_status_get(self) -> None:
        """Test case for api_v1_paid_storage_tasks_task_id_status_get

        Проверить статус
        """
        pass

    def test_api_v1_tariffs_box_get(self) -> None:
        """Test case for api_v1_tariffs_box_get

        Тарифы для коробов
        """
        pass

    def test_api_v1_tariffs_pallet_get(self) -> None:
        """Test case for api_v1_tariffs_pallet_get

        Тарифы для монопаллет
        """
        pass

    def test_api_v2_buffer_goods_task_get(self) -> None:
        """Test case for api_v2_buffer_goods_task_get

        Детализация необработанной загрузки
        """
        pass

    def test_api_v2_buffer_tasks_get(self) -> None:
        """Test case for api_v2_buffer_tasks_get

        Состояние необработанной загрузки
        """
        pass

    def test_api_v2_history_goods_task_get(self) -> None:
        """Test case for api_v2_history_goods_task_get

        Детализация обработанной загрузки
        """
        pass

    def test_api_v2_history_tasks_get(self) -> None:
        """Test case for api_v2_history_tasks_get

        Состояние обработанной загрузки
        """
        pass

    def test_api_v2_list_goods_filter_get(self) -> None:
        """Test case for api_v2_list_goods_filter_get

        Получить товары
        """
        pass

    def test_api_v2_list_goods_size_nm_get(self) -> None:
        """Test case for api_v2_list_goods_size_nm_get

        Получить размеры товара
        """
        pass

    def test_api_v2_nm_report_detail_history_post(self) -> None:
        """Test case for api_v2_nm_report_detail_history_post

        Получение статистики КТ по дням по выбранным nmID
        """
        pass

    def test_api_v2_nm_report_detail_post(self) -> None:
        """Test case for api_v2_nm_report_detail_post

        Получение статистики КТ за выбранный период, по nmID/предметам/брендам/тегам
        """
        pass

    def test_api_v2_nm_report_grouped_history_post(self) -> None:
        """Test case for api_v2_nm_report_grouped_history_post

        Получение статистики КТ по дням за период, сгруппированный по предметам, брендам и тегам
        """
        pass

    def test_api_v2_nm_report_grouped_post(self) -> None:
        """Test case for api_v2_nm_report_grouped_post

        Получение статистики КТ за период, сгруппированный по предметам, брендам и тегам
        """
        pass

    def test_api_v3_files_orders_external_stickers_post(self) -> None:
        """Test case for api_v3_files_orders_external_stickers_post

        Получить список ссылок на этикетки для сборочных заданий, которые требуются при кроссбордере
        """
        pass

    def test_api_v3_orders_get(self) -> None:
        """Test case for api_v3_orders_get

        Получить информацию по сборочным заданиям
        """
        pass

    def test_api_v3_orders_new_get(self) -> None:
        """Test case for api_v3_orders_new_get

        Получить список новых сборочных заданий
        """
        pass

    def test_api_v3_orders_order_id_cancel_patch(self) -> None:
        """Test case for api_v3_orders_order_id_cancel_patch

        Отменить сборочное задание
        """
        pass

    def test_api_v3_orders_order_id_meta_delete(self) -> None:
        """Test case for api_v3_orders_order_id_meta_delete

        Удалить метаданные сборочного задания
        """
        pass

    def test_api_v3_orders_order_id_meta_get(self) -> None:
        """Test case for api_v3_orders_order_id_meta_get

        Получить метаданные сборочного задания
        """
        pass

    def test_api_v3_orders_order_id_meta_gtin_put(self) -> None:
        """Test case for api_v3_orders_order_id_meta_gtin_put

        Закрепить за сборочным заданием GTIN
        """
        pass

    def test_api_v3_orders_order_id_meta_imei_put(self) -> None:
        """Test case for api_v3_orders_order_id_meta_imei_put

        Закрепить за сборочным заданием IMEI
        """
        pass

    def test_api_v3_orders_order_id_meta_sgtin_put(self) -> None:
        """Test case for api_v3_orders_order_id_meta_sgtin_put

        Закрепить за сборочным заданием КиЗ (маркировку Честного знака)
        """
        pass

    def test_api_v3_orders_order_id_meta_uin_put(self) -> None:
        """Test case for api_v3_orders_order_id_meta_uin_put

        Закрепить за сборочным заданием УИН (уникальный идентификационный номер)
        """
        pass

    def test_api_v3_orders_status_post(self) -> None:
        """Test case for api_v3_orders_status_post

        Получить статусы сборочных заданий
        """
        pass

    def test_api_v3_orders_stickers_post(self) -> None:
        """Test case for api_v3_orders_stickers_post

        Получить этикетки для сборочных заданий
        """
        pass

    def test_api_v3_supplies_orders_reshipment_get(self) -> None:
        """Test case for api_v3_supplies_orders_reshipment_get

        Получить все сборочные задания на повторную отгрузку
        """
        pass


if __name__ == '__main__':
    unittest.main()
