# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.response_with_date_inner import ResponseWithDateInner

class TestResponseWithDateInner(unittest.TestCase):
    """ResponseWithDateInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseWithDateInner:
        """Test ResponseWithDateInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseWithDateInner`
        """
        model = ResponseWithDateInner()
        if include_optional:
            return ResponseWithDateInner(
                dates = [
                    datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
                    ],
                views = 56,
                clicks = 56,
                ctr = 1.337,
                cpc = 1.337,
                sum = 1.337,
                atbs = 56,
                orders = 56,
                cr = 56,
                shks = 56,
                sum_price = 1.337,
                days = [
                    wildberries_async_api_client.models.days_inner.Days_inner(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        views = 56, 
                        clicks = 56, 
                        ctr = 1.337, 
                        cpc = 1.337, 
                        sum = 1.337, 
                        atbs = 56, 
                        orders = 56, 
                        cr = 56, 
                        shks = 56, 
                        sum_price = 1.337, 
                        apps = [
                            wildberries_async_api_client.models.days_inner_apps_inner.Days_inner_apps_inner(
                                views = 56, 
                                clicks = 56, 
                                ctr = 1.337, 
                                cpc = 1.337, 
                                sum = 1.337, 
                                atbs = 56, 
                                orders = 56, 
                                cr = 56, 
                                shks = 56, 
                                sum_price = 1.337, 
                                nm = [
                                    wildberries_async_api_client.models.days_inner_apps_inner_nm_inner.Days_inner_apps_inner_nm_inner(
                                        views = 56, 
                                        clicks = 56, 
                                        ctr = 1.337, 
                                        cpc = 1.337, 
                                        sum = 1.337, 
                                        atbs = 56, 
                                        orders = 56, 
                                        cr = 56, 
                                        shks = 56, 
                                        sum_price = 1.337, 
                                        name = '', 
                                        nm_id = 56, )
                                    ], 
                                app_type = 56, )
                            ], )
                    ],
                booster_stats = [
                    wildberries_async_api_client.models.booster_stats_inner.BoosterStats_inner(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        nm = 56, 
                        avg_position = 56, )
                    ],
                advert_id = 56
            )
        else:
            return ResponseWithDateInner(
        )
        """

    def testResponseWithDateInner(self):
        """Test ResponseWithDateInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
