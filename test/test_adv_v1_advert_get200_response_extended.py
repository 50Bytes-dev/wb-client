# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.adv_v1_advert_get200_response_extended import AdvV1AdvertGet200ResponseExtended

class TestAdvV1AdvertGet200ResponseExtended(unittest.TestCase):
    """AdvV1AdvertGet200ResponseExtended unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvV1AdvertGet200ResponseExtended:
        """Test AdvV1AdvertGet200ResponseExtended
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvV1AdvertGet200ResponseExtended`
        """
        model = AdvV1AdvertGet200ResponseExtended()
        if include_optional:
            return AdvV1AdvertGet200ResponseExtended(
                reason = '',
                expenses = 56,
                var_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                price = 56,
                budget = 56,
                operation = 56,
                contract_id = 56
            )
        else:
            return AdvV1AdvertGet200ResponseExtended(
        )
        """

    def testAdvV1AdvertGet200ResponseExtended(self):
        """Test AdvV1AdvertGet200ResponseExtended"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
