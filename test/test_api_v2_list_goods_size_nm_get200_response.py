# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.api_v2_list_goods_size_nm_get200_response import ApiV2ListGoodsSizeNmGet200Response

class TestApiV2ListGoodsSizeNmGet200Response(unittest.TestCase):
    """ApiV2ListGoodsSizeNmGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV2ListGoodsSizeNmGet200Response:
        """Test ApiV2ListGoodsSizeNmGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV2ListGoodsSizeNmGet200Response`
        """
        model = ApiV2ListGoodsSizeNmGet200Response()
        if include_optional:
            return ApiV2ListGoodsSizeNmGet200Response(
                data = wildberries_async_api_client.models._api_v2_list_goods_size_nm_get_200_response_data._api_v2_list_goods_size_nm_get_200_response_data(
                    list_goods = [
                        wildberries_async_api_client.models.size_good.SizeGood(
                            nm_id = 123, 
                            size_id = 98989887, 
                            vendor_code = '34552332', 
                            price = 25000, 
                            currency_iso_code4217 = 'RUB', 
                            discounted_price = 14250, 
                            discount = 43, 
                            tech_size_name = '42', 
                            editable_size_price = True, )
                        ], ),
                error = False,
                error_text = ''
            )
        else:
            return ApiV2ListGoodsSizeNmGet200Response(
        )
        """

    def testApiV2ListGoodsSizeNmGet200Response(self):
        """Test ApiV2ListGoodsSizeNmGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
