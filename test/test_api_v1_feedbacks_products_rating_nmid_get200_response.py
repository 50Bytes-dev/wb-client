# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.api_v1_feedbacks_products_rating_nmid_get200_response import ApiV1FeedbacksProductsRatingNmidGet200Response

class TestApiV1FeedbacksProductsRatingNmidGet200Response(unittest.TestCase):
    """ApiV1FeedbacksProductsRatingNmidGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1FeedbacksProductsRatingNmidGet200Response:
        """Test ApiV1FeedbacksProductsRatingNmidGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1FeedbacksProductsRatingNmidGet200Response`
        """
        model = ApiV1FeedbacksProductsRatingNmidGet200Response()
        if include_optional:
            return ApiV1FeedbacksProductsRatingNmidGet200Response(
                data = wildberries_async_api_client.models._api_v1_feedbacks_products_rating_nmid_get_200_response_data._api_v1_feedbacks_products_rating_nmid_get_200_response_data(
                    valuation = '4.3', 
                    feedbacks_count = 16, ),
                error = False,
                error_text = '',
                additional_errors = [
                    ''
                    ]
            )
        else:
            return ApiV1FeedbacksProductsRatingNmidGet200Response(
        )
        """

    def testApiV1FeedbacksProductsRatingNmidGet200Response(self):
        """Test ApiV1FeedbacksProductsRatingNmidGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
