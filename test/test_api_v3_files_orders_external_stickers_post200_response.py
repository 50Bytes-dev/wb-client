# coding: utf-8

"""
    Wildberries API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wildberries_async_api_client.models.api_v3_files_orders_external_stickers_post200_response import ApiV3FilesOrdersExternalStickersPost200Response

class TestApiV3FilesOrdersExternalStickersPost200Response(unittest.TestCase):
    """ApiV3FilesOrdersExternalStickersPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV3FilesOrdersExternalStickersPost200Response:
        """Test ApiV3FilesOrdersExternalStickersPost200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV3FilesOrdersExternalStickersPost200Response`
        """
        model = ApiV3FilesOrdersExternalStickersPost200Response()
        if include_optional:
            return ApiV3FilesOrdersExternalStickersPost200Response(
                stickers = [
                    wildberries_async_api_client.models._api_v3_files_orders_external_stickers_post_200_response_stickers_inner._api_v3_files_orders_external_stickers_post_200_response_stickers_inner(
                        order_id = 5346346, 
                        url = 'http://.../some-sticker', 
                        parcel_id = 'WB0000000001', )
                    ]
            )
        else:
            return ApiV3FilesOrdersExternalStickersPost200Response(
        )
        """

    def testApiV3FilesOrdersExternalStickersPost200Response(self):
        """Test ApiV3FilesOrdersExternalStickersPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
